<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="learn.spring.learnspring.dao.UserDao">

    <resultMap id="BaseResultMap" type="learn.spring.learnspring.model.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="nickname" column="nickname"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="avatarUrl" column="avatar_url"/>
        <result property="description" column="description"/>
        <result property="enabled" column="enabled"/>
        <result property="permissions" column="permissions"/>
    </resultMap>

    <resultMap id="userWithPermissionMap" type="learn.spring.learnspring.domain.UserExt" extends="BaseResultMap">
        <association property="permission" resultMap="learn.spring.learnspring.dao.PermissionDao.BaseReaultMap" columnPrefix="per_"/>
    </resultMap>


    <select id="selectUserByIdMap" resultMap="userWithPermissionMap">
        select us.id,
               us.username,
               us.nickname,
               us.phone_number,
               us.email,
               us.password,
               us.avatar_url,
               us.description,
               us.enabled,
               us.permissions,
               per.id              as per_id,
               per.permission_type as per_permissionType,
               per.desc            as per_desc
        from tbl_user us
                 left join tbl_permission per on us.permissions = per.id
        where us.id = #{id}
    </select>

    <!-- 分割线-->

    <select id="selectById" resultType="learn.spring.learnspring.model.User">
        select id,
               username,
               nickname,
               phone_number as phoneNumber,
               email,
               password,
               avatar_url   as avatarUrl,
               description,
               enabled,
               permissions
        from tbl_user
        where id = #{id}
    </select>

    <insert id="insertUser">
        insert into tbl_user (username,
        nickname,
        phone_number,
        email,
        password,
        avatar_url,
        description,
        enabled,
        permissions)
        values (#{username},
        #{nickname},
        #{phoneNumber},
        #{email},
        #{password},
        #{avatarUrl},
        #{description},
        #{enabled},
        #{permissions})
        <selectKey keyColumn="id" resultType="int" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateById">
        update tbl_user
        set username=#{username},
            nickname=#{nickname}
        where id = #{id}
    </update>


    <delete id="deleteById">
        delete
        from tbl_user
        where id = #{id}
    </delete>


    <select id="usefulSelectByIdOrUsernameOrNickname" resultType="learn.spring.learnspring.model.User">
        select
        id,
        username,
        nickname,
        phone_number as phoneNumber,
        email,
        password,
        avatar_url as avatarUrl,
        description,
        enabled,
        permissions
        from tbl_user
        <where>
            <if test="id != null and id != ''">
                and id=#{id}
            </if>
            <if test="userName != null and userName != ''">
                and username like concat('%', #{userName}, '%')
            </if>
            <if test="nickName != null and nickName != ''">
                and nickname like concat('%', #{nickName}, '%')
            </if>
        </where>
    </select>

    <select id="selectUserById" resultType="learn.spring.learnspring.domain.UserExt">
        select us.id,
               us.username,
               us.nickname,
               us.phone_number     as phoneNumber,
               us.email,
               us.password,
               us.avatar_url       as avatarUrl,
               us.description,
               us.enabled,
               us.permissions,
               per.id              as "permission.id",
               per.permission_type as "permission.permissionType",
               per.desc            as "permission.desc"
        from tbl_user us
                 left join tbl_permission per on us.permissions = per.id
        where us.id = #{id}
    </select>
</mapper>